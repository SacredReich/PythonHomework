# ПЕРВЫЙ СЕМИНАР
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Задача 2: Найдите сумму цифр трехзначного числа.
# print("\033[H\033[J")


# def numbersSumm():
#     numb = int(input('Введите трехзначное число:  '))
#     if (999 > numb > 99):
#         first = numb // 100
#         second = numb // 10 % 10
#         third = numb % 10
#         print(f"{numb} -> {first + second + third} ({first} + {second} + {third})")
#     else:
#         print("Число не является трехзначным!")
#         return numbersSumm()


# numbersSumm()
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Задача 4: Петя, Катя и Сережа делают из бумаги журавликов. Вместе они сделали S журавликов. Сколько журавликов сделал каждый ребенок, если известно, что Петя и Сережа сделали одинаковое количество журавликов, а Катя сделала в два раза больше журавликов, чем Петя и Сережа вместе?
# print("\033[H\033[J")


# def findPartssOfSix():
#     summ = int(
#         input("Введите общее количество сделанных журавликов, кратное 6:  "))
#     if (summ % 6 == 0):
#         print(
#             f"{summ} -> {summ//6*2} (Катя), {summ//6} (Сережа), {summ//6} (Петя)")
#     else:
#         (print("Введенное число не кратно 6"))
#         return findPartssOfSix()


# findPartssOfSix()
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Задача 6: Вы пользуетесь общественным транспортом? Вероятно, вы расплачивались за проезд и получали билет с номером. Счастливым
# билетом называют такой билет с шестизначным номером, где сумма первых трех цифр равна сумме последних трех.
# Т.е. билет с номером 385916 – счастливый, т.к. 3+8+5=9+1+6. Вам требуется написать программу, которая проверяет счастливость билета.

#       print("\033[H\033[J")
# def findPartssOfSix():
#     numb = (input('Введите номер билета:  '))
#     if (len(numb) == 6):
#         firstPart = (int(numb[0]) + int((numb[1])) + int(numb[2]))
#         lastPart = (int(numb[3]) + int((numb[4])) + int(numb[5]))
#         if firstPart == lastPart:
#             print(f"{numb} -> Yes")
#         else:
#             print(f"{numb} -> No")
#     else:
#         print("Некорректный номер")
#         return findPartssOfSix()


# findPartssOfSix()
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Задача 8: Требуется определить, можно ли от шоколадки размером n × m долек отломить k долек,
# если разрешается сделать один разлом по прямой между дольками (то есть разломить шоколадку на два прямоугольника).

# print("\033[H\033[J")


# def chocolateSlise():

#     aSide = int(input("Введите длину первой стороны шоколадки: "))
#     bSide = int(input("Введите длину второй стороны шоколадки: "))
#     xSlise = int(input
#                  ("Введите желаемое количество долек прямого разлома шоколадки: "))
#     if (aSide == 1 and bSide == 1):
#         print("Такую шоколадку аккуратно не сломать!")
#         return chocolateSlise()
#     elif (aSide <= 0 or bSide <= 0):
#         print("Неправильные значения, таких шоколадок быть не может!")
#         return chocolateSlise()
#     else:

#         if (aSide > bSide):
#             if (xSlise % aSide == 0 or xSlise % bSide == 0 and aSide*bSide-bSide >= xSlise >= bSide):
#                 print(
#                     f"Шоколадка ({aSide}*{bSide}), дольки в отломанном кусочке ({xSlise}) -> yes")
#             else:
#                 print(
#                     f"Шоколадка ({aSide}*{bSide}), дольки в отломанном кусочке ({xSlise}) -> no")
#         else:
#             if (xSlise % aSide == 0 or xSlise % bSide == 0 and aSide*bSide-aSide >= xSlise >= aSide):
#                 print(
#                     f"Шоколадка ({aSide}*{bSide}), дольки в отломанном кусочке ({xSlise}) -> yes")
#             else:
#                 print(
#                     f"Шоколадка ({aSide}*{bSide}), дольки в отломанном кусочке ({xSlise}) -> no")


# chocolateSlise()
# # ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


# ВТОРОЙ СЕМИНАР
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Задача 10: На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты
# вверх одной и той же стороной. Выведите минимальное количество монет, которые нужно перевернуть.
# print("\033[H\033[J")
# coins = int(input('Введите количество монет: '))
# eagles = 0
# count = 1
# for i in range(coins):
#     money = int(
#         input(f'Если {count} монета - орел, то введите 1. Если решка - 0: '))
#     if (money == 1):
#         eagles += 1
#     count += 1
# if (eagles == coins):
#     print('Все монеты - орлы, ничего делать не нужно.')
# elif (eagles == 0):
#     print('Все монеты - решки, ничего делать не нужно.')
# elif (eagles >= coins//2+1):
#     print(f'Переверните {eagles} монет с орлом, и все монеты станут орлами.')
# elif (eagles <= coins//2):
#     print(
#         f'Переверните {coins-eagles} монет с решкой, и все монеты станут решками.')
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Задача 12: Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике. Он задумывает два натуральных числа X и Y(X, Y≤1000), а Катя должна их отгадать.
# Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные Петей числа.
# print("\033[H\033[J")


# def findNumbers():
#     done = 0
#     summ = int(input('Введите сумму чисел: '))
#     product = int(input('Введите произведение чисел: '))
#     for i in range(1, 1001):
#         for j in range(1, 1001):
#             if (summ == i+j and product == i*j):
#                 print(f'Загаданные числа найдены: {i} и {j}')
#                 done = 1
#                 return 1
#     if (done == 0):
#         return 0


# answer = findNumbers()
# while (answer == 0):
#     print('Неверные данные!')
#     findNumbers()
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Задача 14: Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.

# print("\033[H\033[J")

# limit = int(input('Введите число: '))
# count = 0
# while (2**count <= limit):
#     print(2**count)
#     count += 1
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
